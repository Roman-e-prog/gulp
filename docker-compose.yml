services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile-backend
    command: ["npm","run", "server"]
    environment:
      - PORT=${PORT}
      - SERVER_PORT=5000
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - NODE_ENV="production"
    ports:
      - 5000:5000
    depends_on:
      - postgres
    networks:
      - private
      - public
    deploy:
      resources: 
        limits:
          cpus: '0.50'
          memory: 0.8G
  postgres:
    image: 'postgres'
    ports:
      - 15432:5432
    env_file:
      - .env
    networks:
      - postgres-network
    volumes:
      - ${PWD}/db-data/:/var/lib/postgresql/data/
      - ${PWD}/init.sql:/docker-entrypoint-initdb.d/init.sql
  
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 15433:80
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - postgres-network
    volumes:
      - ${PWD}/pgadmin-data/:/var/lib/pgadmin/
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - public
    volumes:
      - frontend_node_modules:/node_modules
    depends_on:
      - backend
    ports:
      - 3000:3000
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '0.8G'

networks: 
  postgres-network:
    driver: bridge
  private: {}
  public: {}
