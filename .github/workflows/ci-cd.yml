name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      PORT: ${{ secrets.PORT }}
      NODE_ENV: production
      SERVER_PORT: ${{ secrets.SERVER_PORT }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_NAME: ${{ secrets.DB_NAME }}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        options: >-
          --health-cmd="pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install --include=dev

    - name: Wait for PostgreSQL to be ready
      run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for PostgreSQL..."
            sleep 20
          done

    # - name: Create postgres user
    #   run: |
    #     psql -h ${{ secrets.DB_HOST }} -d $${POSTGRES_DB} -p 5432 -U $${POSTGRES_USER} -c "CREATE ROLE $${POSTGRES_USER} WITH LOGIN PASSWORD '${{ secrets.DATABASE_PASSWORD }}';"

    - name: Run Gulp build
      env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DB_HOST: postgres
          DB_NAME: ${{ secrets.DB_NAME }}
          PORT: 5432
      run: gulp

    - name: List node_modules
      run: ls node_modules

    - name: Build Docker images
      run: |
        docker build -t gulp-frontend-1 romanarmin/gulpApp-frontend:v1 .
        docker build -t gulp-backend-1 romanarmin/gulpApp-backend:v1 .

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker images
      run: |
        docker push romanarmin/gulpApp-frontend:v1
        docker push romanarmin/gulpApp-backend:v1

    - name: Test the App
      run: npm run test
