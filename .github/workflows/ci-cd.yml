name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    container: node:20  # Use a Node.js container for the job
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        options: >-
          --health-cmd="pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"
          --health-interval=30s
          --health-timeout=10s
          --health-retries=5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: npm install --include=dev

    # - name: Wait for PostgreSQL to be ready
    #   run: |
    #       echo "Waiting for PostgreSQL to be ready..."
    #       sleep 60  # Add a sleep command to give PostgreSQL extra time
    #       until pg_isready -h postgres -d $${POSTGRES_DB} -p 5432; do
    #         echo "Waiting for PostgreSQL..."
    #         sleep 30  # Increase the wait time between checks
    #       done
    - name: Print environment variables
      run: printenv | grep DB_

    - name: Run Gulp build
      env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: "${{ secrets.DATABASE_PASSWORD }}"
          DB_HOST: postgres
          DB_NAME: ${{ secrets.DB_NAME }}
          PORT: 5432
          SERVER_PORT: 5000
      run: npx gulp

    - name: Build Docker images
      run: |
            docker build -t gulp-frontend-1 romanarmin/gulpApp-frontend:v1 .
            docker build -t gulp-backend-1 romanarmin/gulpApp-backend:v1 .  
    
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker images
      run: |
          docker push romanarmin/gulpApp-frontend:v1
          docker push romanarmin/gulpApp-backend:v1

    - name: List node_modules
      run: ls node_modules

    - name: Test the App
      run: npm run test
