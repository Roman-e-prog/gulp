name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    container: node:20  # Use a Node.js container for the job

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: npm install --include=dev

    - name: Install Docker Compose
      run: apt-get update && apt-get install -y docker-compose
    
    - name: Stop and remove existing containers
      run: |
        docker-compose down
        docker ps -q --filter "name=gulp_" | xargs -r docker stop
        docker ps -a -q --filter "name=gulp_" | xargs -r docker rm

    - name: list running containers
      run: docker ps -a   

    - name: Build and start services
      env:
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: postgres
        DB_NAME: ${{ secrets.DB_NAME }}
        PORT: 5432
        SERVER_PORT: 5000
      run: 
        docker-compose up --build -d

    - name: Build Docker images
      run: |
            docker tag gulp_frontend romanarmin/gulpapp-frontend:v1 
            docker tag gulp_backend romanarmin/gulpapp-backend:v1   
    
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker images
      run: |
          docker push romanarmin/gulpapp-frontend:v1
          docker push romanarmin/gulpapp-backend:v1

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Run Playwright tests
      run: npx playwright test
    
    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Cleanup
      if: always()
      run: docker-compose down
